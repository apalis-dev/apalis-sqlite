[package]
name = "apalis-sqlite"
version = "1.0.0-alpha.3"
authors = ["Njuguna Mureithi <mureithinjuguna@gmail.com>"]
readme = "README.md"
edition = "2024"
repository = "https://github.com/apalis-dev/apalis-sqlite"
license = "MIT"
description = "Background task processing for rust using apalis and sqlite"

[features]
default = ["migrate", "json"]
migrate = ["sqlx/migrate", "sqlx/macros"]
async-std-comp = ["async-std", "sqlx/runtime-async-std-rustls"]
async-std-comp-native-tls = ["async-std", "sqlx/runtime-async-std-native-tls"]
tokio-comp = ["tokio", "sqlx/runtime-tokio-rustls"]
tokio-comp-native-tls = ["tokio", "sqlx/runtime-tokio-native-tls"]
json = ["apalis-core/json", "sqlx/json"]

[dependencies.sqlx]
version = "0.8.6"
default-features = false
features = ["chrono", "sqlite"]

[dependencies]
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1" }
apalis-core = { version = "1.0.0-alpha.7", features = ["sleep"] }
apalis-sql = { version = "1.0.0-alpha.7" }
log = "0.4.21"
futures = "0.3.30"
tokio = { version = "1", features = ["rt", "net"], optional = true }
async-std = { version = "1.13.0", optional = true }
chrono = { version = "0.4", features = ["serde"] }
thiserror = "2.0.0"
pin-project = "1.1.10"
libsqlite3-sys = "0.35.0"
ulid = { version = "1", features = ["serde"] }
bytes = "1.1.0"

[dev-dependencies]
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
apalis-core = { version = "1.0.0-alpha.7", features = ["test-utils"] }
apalis-sqlite = { path = ".", features = ["migrate", "tokio-comp"] }
apalis-workflow = { version = "0.1.0-alpha.5" }

[package.metadata.docs.rs]
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]
all-features = true

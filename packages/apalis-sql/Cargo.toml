[package]
name = "apalis-sql"
version = "0.4.0-alpha.6"
authors = ["Geoffrey Mureithi <mureithinjuguna@gmail.com>"]
edition = "2021"
readme = "../../README.md"

license = "MIT"
description = "SQL Storage for apalis: simple, extensible multithreaded background job processing for Rust"

[features]
default = [ "sqlite", "migrate", "tokio-comp"]
postgres = [ "sqlx/postgres", "sqlx/json", "sqlx/chrono"]
sqlite = [ "sqlx/sqlite", "sqlx/json", "sqlx/chrono"]
mysql = [ "sqlx/mysql", "sqlx/json", "sqlx/chrono", "sqlx/bigdecimal"]
migrate = ["sqlx/migrate", "sqlx/macros"]
async-std-comp = ["async-std", "apalis-core/async-std-comp", "sqlx/runtime-async-std-rustls"]
tokio-comp = ["tokio", "apalis-core/tokio-comp", "sqlx/runtime-tokio-rustls"]
expose = ["apalis-core/expose"]

[dependencies.sqlx]
version = "0.6"
default-features = false

[dependencies]
serde = { version = "1", features = ["derive"] }
serde_json = "1"
apalis-core = { path = "../../packages/apalis-core", version = "0.4.0-alpha.6", features= ["storage"],  default-features = false}
chrono = { version = "0.4", default-features = false, features = ["clock", "serde"] }
futures = "0.3"
async-stream = "0.3"
tokio = { version = "1", features = ["rt", "net"], optional = true }
async-std = { version = "1.8.0", optional = true}
futures-lite = "1.12.0"
async-trait = "0.1.53"

[dev-dependencies]
tokio = { version = "1", features = ["macros"] }
email-service = { path = "../../examples/email-service"}
once_cell = "1.17.1"

[package.metadata.docs.rs]
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]
all-features = true

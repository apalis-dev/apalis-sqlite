{
  "db_name": "SQLite",
  "query": "WITH queue_stats AS (\n    SELECT\n        job_type,\n        json_group_array(\n            json_object(\n                'title',\n                statistic,\n                'stat_type',\n                type,\n                'value',\n                value,\n                'priority',\n                priority\n            )\n        ) as stats\n    FROM\n        (\n            SELECT\n                job_type,\n                1 AS priority,\n                'Number' AS type,\n                'RUNNING_JOBS' AS statistic,\n                CAST(\n                    SUM(\n                        CASE\n                            WHEN status = 'Running' THEN 1\n                            ELSE 0\n                        END\n                    ) AS TEXT\n                ) AS value\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                1,\n                'Number',\n                'PENDING_JOBS',\n                CAST(\n                    SUM(\n                        CASE\n                            WHEN status = 'Pending' THEN 1\n                            ELSE 0\n                        END\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                1,\n                'Number',\n                'FAILED_JOBS',\n                CAST(\n                    SUM(\n                        CASE\n                            WHEN status = 'Failed' THEN 1\n                            ELSE 0\n                        END\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                2,\n                'Number',\n                'ACTIVE_JOBS',\n                CAST(\n                    SUM(\n                        CASE\n                            WHEN status IN ('Pending', 'Queued', 'Running') THEN 1\n                            ELSE 0\n                        END\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                2,\n                'Number',\n                'STALE_RUNNING_JOBS',\n                CAST(COUNT(*) AS TEXT)\n            FROM\n                Jobs\n            WHERE\n                status = 'Running'\n                AND run_at < strftime('%s', 'now', '-1 hour')\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                2,\n                'Percentage',\n                'KILL_RATE',\n                CAST(\n                    ROUND(\n                        100.0 * SUM(\n                            CASE\n                                WHEN status = 'Killed' THEN 1\n                                ELSE 0\n                            END\n                        ) / NULLIF(COUNT(*), 0),\n                        2\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                3,\n                'Number',\n                'JOBS_PAST_HOUR',\n                CAST(COUNT(*) AS TEXT)\n            FROM\n                Jobs\n            WHERE\n                run_at >= strftime('%s', 'now', '-1 hour')\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                3,\n                'Number',\n                'JOBS_TODAY',\n                CAST(COUNT(*) AS TEXT)\n            FROM\n                Jobs\n            WHERE\n                date(run_at, 'unixepoch') = date('now')\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                3,\n                'Number',\n                'KILLED_JOBS_TODAY',\n                CAST(\n                    SUM(\n                        CASE\n                            WHEN status = 'Killed' THEN 1\n                            ELSE 0\n                        END\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            WHERE\n                date(run_at, 'unixepoch') = date('now')\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                3,\n                'Decimal',\n                'AVG_JOBS_PER_MINUTE_PAST_HOUR',\n                CAST(ROUND(COUNT(*) / 60.0, 2) AS TEXT)\n            FROM\n                Jobs\n            WHERE\n                run_at >= strftime('%s', 'now', '-1 hour')\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                4,\n                'Number',\n                'TOTAL_JOBS',\n                CAST(COUNT(*) AS TEXT)\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                4,\n                'Number',\n                'DONE_JOBS',\n                CAST(\n                    SUM(\n                        CASE\n                            WHEN status = 'Done' THEN 1\n                            ELSE 0\n                        END\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                4,\n                'Number',\n                'KILLED_JOBS',\n                CAST(\n                    SUM(\n                        CASE\n                            WHEN status = 'Killed' THEN 1\n                            ELSE 0\n                        END\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                4,\n                'Percentage',\n                'SUCCESS_RATE',\n                CAST(\n                    ROUND(\n                        100.0 * SUM(\n                            CASE\n                                WHEN status = 'Done' THEN 1\n                                ELSE 0\n                            END\n                        ) / NULLIF(COUNT(*), 0),\n                        2\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                5,\n                'Decimal',\n                'AVG_JOB_DURATION_MINS',\n                CAST(ROUND(AVG((done_at - run_at) / 60.0), 2) AS TEXT)\n            FROM\n                Jobs\n            WHERE\n                status IN ('Done', 'Failed', 'Killed')\n                AND done_at IS NOT NULL\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                5,\n                'Decimal',\n                'LONGEST_RUNNING_JOB_MINS',\n                CAST(\n                    ROUND(\n                        MAX(\n                            CASE\n                                WHEN status = 'Running' THEN (strftime('%s', 'now') - run_at) / 60.0\n                                ELSE 0\n                            END\n                        ),\n                        2\n                    ) AS TEXT\n                )\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                6,\n                'Number',\n                'JOBS_PAST_7_DAYS',\n                CAST(COUNT(*) AS TEXT)\n            FROM\n                Jobs\n            WHERE\n                run_at >= strftime('%s', 'now', '-7 days')\n            GROUP BY\n                job_type\n            UNION\n            ALL\n            SELECT\n                job_type,\n                8,\n                'Timestamp',\n                'MOST_RECENT_JOB',\n                CAST(MAX(run_at) AS TEXT)\n            FROM\n                Jobs\n            GROUP BY\n                job_type\n            ORDER BY\n                job_type,\n                priority,\n                statistic\n        )\n    GROUP BY\n        job_type\n),\nall_job_types AS (\n    SELECT\n        worker_type AS job_type\n    FROM\n        Workers\n    UNION\n    SELECT\n        job_type\n    FROM\n        Jobs\n)\nSELECT\n    jt.job_type as name,\n    COALESCE(qs.stats, '[]') as stats,\n    COALESCE(\n        (\n            SELECT\n                json_group_array(DISTINCT lock_by)\n            FROM\n                Jobs\n            WHERE\n                job_type = jt.job_type\n                AND lock_by IS NOT NULL\n        ),\n        '[]'\n    ) as workers,\n    COALESCE(\n        (\n            SELECT\n                json_group_array(daily_count)\n            FROM\n                (\n                    SELECT\n                        COUNT(*) as daily_count\n                    FROM\n                        Jobs\n                    WHERE\n                        job_type = jt.job_type\n                        AND run_at >= strftime('%s', 'now', '-7 days')\n                    GROUP BY\n                        date(run_at, 'unixepoch')\n                    ORDER BY\n                        date(run_at, 'unixepoch')\n                )\n        ),\n        '[]'\n    ) as activity\nFROM\n    all_job_types jt\n    LEFT JOIN queue_stats qs ON jt.job_type = qs.job_type\nORDER BY\n    name;\n",
  "describe": {
    "columns": [
      {
        "name": "name",
        "ordinal": 0,
        "type_info": "Text"
      },
      {
        "name": "stats",
        "ordinal": 1,
        "type_info": "Text"
      },
      {
        "name": "workers",
        "ordinal": 2,
        "type_info": "Text"
      },
      {
        "name": "activity",
        "ordinal": 3,
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Right": 0
    },
    "nullable": [
      false,
      false,
      false,
      false
    ]
  },
  "hash": "42042a81a76b1f366a6f421acc329a245d0bb2b84595f87a883c60d6f120cf63"
}

name: Benchmarks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Run benchmarks
        run: |
          if find . -name "*.rs" -exec grep -l "#\[bench\]" {} \; | grep -q .; then
            echo "Found benchmark tests, running cargo bench"
            cargo bench
          else
            echo "No benchmark tests found, skipping"
          fi

      - name: Install cargo-criterion (if criterion benchmarks exist)
        run: |
          if find . -name "*.rs" -exec grep -l "criterion::" {} \; | grep -q .; then
            echo "Found criterion benchmarks, installing cargo-criterion"
            cargo install cargo-criterion
            cargo criterion
          else
            echo "No criterion benchmarks found, skipping"
          fi

  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Get MSRV from Cargo.toml
        id: msrv
        run: |
          MSRV=$(grep "rust-version" Cargo.toml | sed 's/.*rust-version.*=.*"\(.*\)".*/\1/' || echo "1.70.0")
          echo "msrv=$MSRV" >> $GITHUB_OUTPUT
          echo "Detected MSRV: $MSRV"

      - name: Install MSRV Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.msrv.outputs.msrv }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-msrv-${{ steps.msrv.outputs.msrv }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Test with MSRV
        run: cargo test --all-features
